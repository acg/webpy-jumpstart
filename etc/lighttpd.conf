# lighttpd configuration file

var.basedir = var.CWD

## a static document-root, for virtual-hosting take look at the
## server.virtual-* options
server.document-root             = basedir

## modules to load
# at least mod_access and mod_accesslog should be loaded
server.modules = (
  "mod_rewrite",
#  "mod_redirect",
  "mod_access",
  "mod_auth",
#  "mod_simple_vhost",
  "mod_fastcgi",
  "mod_accesslog"
)

## logging
server.errorlog             = basedir + "/log/error.log"
accesslog.filename          = basedir + "/log/access.log"

# files to check for if .../ is requested
index-file.names            = ( "index.html", "index.htm" )

## set the event-handler (read the performance section in the manual)
# server.event-handler = "freebsd-kqueue"

# mimetype mapping
mimetype.assign             = (
  ".html"         =>      "text/html",
  ".htm"          =>      "text/html",
  ".css"          =>      "text/css",
  ".js"           =>      "text/javascript",
  ".gif"          =>      "image/gif",
  ".jpg"          =>      "image/jpeg",
  ".jpeg"         =>      "image/jpeg",
  ".png"          =>      "image/png",
  ".txt"          =>      "text/plain",
  ".xml"          =>      "text/xml",
  ".pdf"          =>      "application/pdf",
  ".tar.gz"       =>      "application/x-tgz",
  ".tgz"          =>      "application/x-tgz",
  ".tar"          =>      "application/x-tar",
  ".zip"          =>      "application/zip",
  # default mime type
  ""              =>      "application/octet-stream"
 )

# Use the "Content-Type" extended attribute to obtain mime type if possible
#mimetype.use-xattr        = "enable"

## send a different Server: header
# server.tag                 = "lighttpd"

## deny access the file-extensions
url.access-deny             = ( "~" )

# which extensions should not be handle via static-file transfer
static-file.exclude-extensions = ( ".php", ".pl", ".py", ".fcgi", ".cgi", ".sh" )

# Default is 0.0.0.0:80
server.port                = 8084
server.bind                = "127.0.0.1"

## error-handler for status 404
#server.error-handler-404   = "/error-handler.html"

## to help the rc.scripts
# server.pid-file            = "/var/run/lighttpd.pid"

# simple-vhost.server-root   = basedir + "/vdomains/"

## virtual directory listings
#dir-listing.activate       = "enable"
## select encoding for directory listings
#dir-listing.encoding        = "utf-8"

## enable debugging
#debug.log-request-header   = "enable"
#debug.log-response-header  = "enable"
#debug.log-request-handling = "enable"
#debug.log-file-not-found   = "enable"

### only root can use these options
#
# chroot() to directory (default: no chroot() )
#server.chroot              = "/"

## change uid to <uid> (default: don't care)
server.username            = "www"

## change uid to <uid> (default: don't care)
server.groupname           = "www"

#### FastCGI module
fastcgi.server = (
  "/webapp.py" => ((
     "socket" => basedir + "/fastcgi.sock",
     "bin-path" => basedir + "/webapp.py",
     "max-procs" => 2,
     "bin-environment" => (
       "REAL_SCRIPT_NAME" => ""
     ),
     "check-local" => "disable"
  ))
)

#### SSL engine
#ssl.engine                 = "enable"
#ssl.pemfile                = "/etc/ssl/private/lighttpd.pem"

#### auth module
## read authentication.txt for more info
#auth.backend                   = "htdigest"
#auth.backend.htdigest.userfile = basedir + "/etc/users.htdigest.txt"

#### url handling modules (rewrite, redirect, access)
#url.rewrite                = ( "^/$"             => "/server-status" )
#url.redirect               = ( "^/wishlist/(.+)" => "http://www.123.org/$1" )
#### both rewrite/redirect support back reference to regex conditional using %n
#$HTTP["host"] =~ "^www\.(.*)" {
#  url.redirect            = ( "^/(.*)" => "http://%1/$1" )
#}

url.rewrite-once = (
  "^/favicon.ico$" => "/htdocs/favicon.ico",
  "^/htdocs/(.*)$" => "/htdocs/$1",
  "^/(.*)$" => "/webapp.py/$1",
)

